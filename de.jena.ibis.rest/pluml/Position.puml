@startuml
actor Client as c
participant DeviceResource as dr
participant DeviceStatusService as dss
participant PositionService as ps
participant IbisGNSSLocationService as ignss

activate c
activate ignss
c -> dr: ibis/rest/position/{deviceId}
activate dr

dr -> dss: isServiceAvailable(IbisGNSSLocationService)
activate dss
note right
Check whether the device is online and
the IbisGNSSLocationService 
is available on that device. Otherwise
no info about the position can be recovered.
end note

alt device is online and service available

dss -[#green]> dr: return TRUE

else device is not online or service is unavailable

dss -[#red]> dr: return FALSE
dr -[#red]> c: 404 

end
deactivate dss

dr -> ps: getPositionData(deviceId)
activate ps
ignss -[#blue]> ps: publish position through EventAdmin
note right
This is an async call. Whenever the IbisGNSSLocationService
for a certain device publishes a new position, the 
PositionService keeps track of it, so that we can 
retrieve it when needed.
end note
alt PositionData is available for device
ps -[#green]> dr: return PositionData
else PositionData is NOT available
ps -[#red]> dr: return null
end
deactivate ps

alt PositionData available
dr -[#green]> c: 200 with PositionData object
note left
The PositionData object contains a timestamp
for knowing when the position value refers to, 
and the actual Position, with lat/lng values.
end note
else PositionData NOT available
dr -[#red]> c: 500

deactivate dr
deactivate c
deactivate ignss
@enduml